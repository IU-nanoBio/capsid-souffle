Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 97.34     65.09    65.09      502   129.67   129.67  update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double)
  0.78     65.61     0.52  1859712     0.00     0.00  EDGE::update_bending_forces(double)
  0.67     66.06     0.45        1   450.03   450.03  generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&)
  0.36     66.30     0.24 34046784     0.00     0.00  dist(BEAD*, BEAD*)
  0.15     66.40     0.10 14885120     0.00     0.00  FACE::across(EDGE*)
  0.15     66.50     0.10        1   100.01   152.56  update_LJ_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double)
  0.12     66.58     0.08  8913792     0.00     0.00  EDGE::opposite(BEAD*)
  0.10     66.65     0.07  4456896     0.00     0.00  EDGE::update_length()
  0.10     66.72     0.07  2725440     0.00     0.00  FACE::update_area_normal()
  0.07     66.77     0.05  1378752     0.00     0.00  BEAD::update_stretching_force(double, double)
  0.06     66.81     0.04      501     0.08   131.48  forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double)
  0.04     66.84     0.03                             run_simulation(int, char**)
  0.03     66.86     0.02  1376000     0.00     0.00  BEAD::update_position(double)
  0.01     66.87     0.01      501     0.02     0.02  particle_kinetic_energy(std::vector<BEAD, std::allocator<BEAD> >&)
  0.00     66.87     0.00  1863424     0.00     0.00  std::vector<BEAD*, std::allocator<BEAD*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, unsigned long, BEAD* const&)
  0.00     66.87     0.00    36864     0.00     0.00  std::vector<BEAD*, std::allocator<BEAD*> >::push_back(BEAD* const&)
  0.00     66.87     0.00    34560     0.00     0.00  std::vector<BEAD*, std::allocator<BEAD*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, BEAD* const&)
  0.00     66.87     0.00    27904     0.00     0.00  std::vector<EDGE*, std::allocator<EDGE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<EDGE**, std::vector<EDGE*, std::allocator<EDGE*> > >, EDGE* const&)
  0.00     66.87     0.00    27008     0.00     0.00  std::vector<FACE*, std::allocator<FACE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FACE**, std::vector<FACE*, std::allocator<FACE*> > >, FACE* const&)
  0.00     66.87     0.00    26688     0.00     0.00  std::vector<EDGE*, std::allocator<EDGE*> >::push_back(EDGE* const&)
  0.00     66.87     0.00    16320     0.00     0.00  std::vector<FACE*, std::allocator<FACE*> >::push_back(FACE* const&)
  0.00     66.87     0.00     5000     0.00     0.00  update_chain_xi(unsigned int, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >&, double, long double)
  0.00     66.87     0.00     4095     0.00     0.00  BEAD::~BEAD()
  0.00     66.87     0.00     3712     0.00     0.00  EDGE::update_bending_energy(double)
  0.00     66.87     0.00     2752     0.00     0.00  BEAD::update_stretching_energy(double, double)
  0.00     66.87     0.00     2752     0.00     0.00  BEAD::BEAD(BEAD const&)
  0.00     66.87     0.00     2752     0.00     0.00  std::vector<SUBUNIT*, std::allocator<SUBUNIT*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<SUBUNIT**, std::vector<SUBUNIT*, std::allocator<SUBUNIT*> > >, SUBUNIT* const&)
  0.00     66.87     0.00      504     0.00     0.00  std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector()
  0.00     66.87     0.00      502     0.00     0.00  std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)
  0.00     66.87     0.00      501     0.00     0.42  dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&)
  0.00     66.87     0.00      500     0.00     0.00  ProgressBar(double)
  0.00     66.87     0.00      138     0.00     0.00  std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
  0.00     66.87     0.00       48     0.00     0.00  boost::any::holder<double>::~holder()
  0.00     66.87     0.00       28     0.00     0.00  boost::any::holder<double>::clone() const
  0.00     66.87     0.00       26     0.00     0.00  BEAD* std::__uninitialized_copy<false>::__uninit_copy<BEAD*, BEAD*>(BEAD*, BEAD*, BEAD*)
  0.00     66.87     0.00       13     0.00     0.00  std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&)
  0.00     66.87     0.00       12     0.00     0.00  boost::program_options::typed_value<double, char>::default_value(double const&)
  0.00     66.87     0.00       12     0.00     0.00  boost::program_options::typed_value<double, char>::~typed_value()
  0.00     66.87     0.00       12     0.00     0.00  boost::program_options::typed_value<double, char>* boost::program_options::value<double>(double*)
  0.00     66.87     0.00       12     0.00     0.00  boost::detail::lexical_converter_impl<std::string, double>::try_convert(double const&, std::string&)
  0.00     66.87     0.00       12     0.00     0.00  boost::any::holder<double>::type() const
  0.00     66.87     0.00        8     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > const& boost::program_options::validators::get_single_string<char>(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
  0.00     66.87     0.00        8     0.00     0.00  bool boost::detail::parse_inf_nan<char, double>(char const*, char const*, double&)
  0.00     66.87     0.00        6     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00     66.87     0.00        5     0.00     0.00  std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::push_back(THERMOSTAT const&)
  0.00     66.87     0.00        4     0.00     0.00  boost::any::holder<bool>::~holder()
  0.00     66.87     0.00        4     0.00     0.00  boost::any::holder<char>::~holder()
  0.00     66.87     0.00        4     0.00     0.00  std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::_M_insert_aux(__gnu_cxx::__normal_iterator<THERMOSTAT*, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> > >, THERMOSTAT const&)
  0.00     66.87     0.00        3     0.00     0.00  boost::any::holder<std::string>::~holder()
  0.00     66.87     0.00        3     0.00     0.00  boost::any::holder<bool>::clone() const
  0.00     66.87     0.00        3     0.00     0.00  boost::any::holder<char>::clone() const
  0.00     66.87     0.00        2     0.00     0.00  boost::program_options::basic_option<char>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*>(__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, __gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*)
  0.00     66.87     0.00        2     0.00     0.00  EDGE* std::__uninitialized_copy<false>::__uninit_copy<EDGE*, EDGE*>(EDGE*, EDGE*, EDGE*)
  0.00     66.87     0.00        2     0.00     0.00  FACE* std::__uninitialized_copy<false>::__uninit_copy<FACE*, FACE*>(FACE*, FACE*, FACE*)
  0.00     66.87     0.00        2     0.00     0.00  SUBUNIT* std::__uninitialized_copy<false>::__uninit_copy<SUBUNIT*, SUBUNIT*>(SUBUNIT*, SUBUNIT*, SUBUNIT*)
  0.00     66.87     0.00        2     0.00     0.00  std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::~vector()
  0.00     66.87     0.00        2     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11ProgressBard
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z16forceCalculationRSt6vectorI7SUBUNITSaIS0_EEdddRS_I4BEADSaIS4_EERS_I4PAIRSaIS8_EEddddS_IS_IiSaIiEESaISD_EEddd
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z21initialize_outputfileRSt14basic_ofstreamIcSt11char_traitsIcEES3_
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z23particle_kinetic_energyRSt6vectorI4BEADSaIS0_EE
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4BEAD24update_stretching_energyEdd
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4EDGE8oppositeEP4BEAD
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4FACE13update_normalEv
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7SUBUNIT10update_comEv
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I_lowerBound
  0.00     66.87     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00     66.87     0.00        1     0.00     0.00  initialize_outputfile(std::basic_ofstream<char, std::char_traits<char> >&, std::basic_ofstream<char, std::char_traits<char> >&)
  0.00     66.87     0.00        1     0.00     0.00  initialize_bead_velocities(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<BEAD, std::allocator<BEAD> >&, double)
  0.00     66.87     0.00        1     0.00     0.00  EDGE::~EDGE()
  0.00     66.87     0.00        1     0.00     0.00  FACE::~FACE()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<std::string, char>::default_value(std::string const&)
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<std::string, char>::~typed_value()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<bool, char>::default_value(bool const&)
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<bool, char>::~typed_value()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<char, char>::default_value(char const&)
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::typed_value<char, char>::~typed_value()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::variables_map::~variables_map()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::options_description::~options_description()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::basic_command_line_parser<char>::run()
  0.00     66.87     0.00        1     0.00     0.00  boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*)
  0.00     66.87     0.00        1     0.00     0.00  boost::function1<std::pair<std::string, std::string>, std::string const&>::clear()
  0.00     66.87     0.00        1     0.00     0.00  SUBUNIT::update_com()
  0.00     66.87     0.00        1     0.00     0.00  SUBUNIT::~SUBUNIT()
  0.00     66.87     0.00        1     0.00     0.00  boost::any::holder<std::string>::type() const
  0.00     66.87     0.00        1     0.00     0.00  boost::any::holder<std::string>::clone() const
  0.00     66.87     0.00        1     0.00     0.00  boost::any::holder<bool>::type() const
  0.00     66.87     0.00        1     0.00     0.00  boost::any::holder<char>::type() const
  0.00     66.87     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::find(std::string const&) const
  0.00     66.87     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, __gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*)
  0.00     66.87     0.00        1     0.00     0.00  void std::__uninitialized_fill_n<false>::__uninit_fill_n<EDGE*, unsigned long, EDGE>(EDGE*, unsigned long, EDGE const&)
  0.00     66.87     0.00        1     0.00     0.00  void std::__uninitialized_fill_n<false>::__uninit_fill_n<FACE*, unsigned long, FACE>(FACE*, unsigned long, FACE const&)
  0.00     66.87     0.00        1     0.00     0.00  void std::__uninitialized_fill_n<false>::__uninit_fill_n<SUBUNIT*, unsigned long, SUBUNIT>(SUBUNIT*, unsigned long, SUBUNIT const&)
  0.00     66.87     0.00        1     0.00     0.00  std::vector<BEAD, std::allocator<BEAD> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&)
  0.00     66.87     0.00        1     0.00     0.00  std::vector<EDGE, std::allocator<EDGE> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&)
  0.00     66.87     0.00        1     0.00     0.00  std::vector<FACE, std::allocator<FACE> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  std::vector<PAIR, std::allocator<PAIR> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&)
  0.00     66.87     0.00        1     0.00     0.00  std::vector<SUBUNIT, std::allocator<SUBUNIT> >::~vector()
  0.00     66.87     0.00        1     0.00     0.00  std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::operator=(std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > const&)
  0.00     66.87     0.00        1     0.00     0.00  std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator=(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)
  0.00     66.87     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
  0.00     66.87     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*)
  0.00     66.87     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.01% of 66.87 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.03   66.84                 run_simulation(int, char**) [1]
                0.04   65.83     501/501         forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [2]
                0.45    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
                0.00    0.21     501/501         dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&) [7]
                0.10    0.05       1/1           update_LJ_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double) [9]
                0.13    0.00       1/502         update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double) [3]
                0.02    0.00 1376000/1376000     BEAD::update_position(double) [14]
                0.01    0.00     501/501         particle_kinetic_energy(std::vector<BEAD, std::allocator<BEAD> >&) [15]
                0.00    0.00    3712/3712        EDGE::update_bending_energy(double) [16]
                0.00    0.00    5000/5000        update_chain_xi(unsigned int, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >&, double, long double) [31]
                0.00    0.00    2752/2752        BEAD::update_stretching_energy(double, double) [33]
                0.00    0.00     504/504         std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector() [36]
                0.00    0.00     502/502         std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) [37]
                0.00    0.00     500/500         ProgressBar(double) [38]
                0.00    0.00      12/12          boost::program_options::typed_value<double, char>* boost::program_options::value<double>(double*) [46]
                0.00    0.00      12/12          boost::program_options::typed_value<double, char>::default_value(double const&) [44]
                0.00    0.00       5/5           std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::push_back(THERMOSTAT const&) [52]
                0.00    0.00       1/1           boost::program_options::typed_value<bool, char>::default_value(bool const&) [81]
                0.00    0.00       1/1           boost::program_options::typed_value<std::string, char>::default_value(std::string const&) [79]
                0.00    0.00       1/1           boost::program_options::typed_value<char, char>::default_value(char const&) [83]
                0.00    0.00       1/1           boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*) [88]
                0.00    0.00       1/1           boost::program_options::basic_command_line_parser<char>::run() [87]
                0.00    0.00       1/2           std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::~vector() [63]
                0.00    0.00       1/1           boost::function1<std::pair<std::string, std::string>, std::string const&>::clear() [89]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::find(std::string const&) const [96]
                0.00    0.00       1/1           boost::program_options::variables_map::~variables_map() [85]
                0.00    0.00       1/1           boost::program_options::options_description::~options_description() [86]
                0.00    0.00       1/1           initialize_outputfile(std::basic_ofstream<char, std::char_traits<char> >&, std::basic_ofstream<char, std::char_traits<char> >&) [75]
                0.00    0.00       1/1           std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator=(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) [110]
                0.00    0.00       1/1           SUBUNIT::update_com() [90]
                0.00    0.00       1/1           initialize_bead_velocities(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<BEAD, std::allocator<BEAD> >&, double) [76]
                0.00    0.00       1/1           std::vector<PAIR, std::allocator<PAIR> >::~vector() [106]
                0.00    0.00       1/1           std::vector<FACE, std::allocator<FACE> >::~vector() [105]
                0.00    0.00       1/1           std::vector<EDGE, std::allocator<EDGE> >::~vector() [103]
                0.00    0.00       1/1           std::vector<SUBUNIT, std::allocator<SUBUNIT> >::~vector() [108]
                0.00    0.00       1/1           std::vector<BEAD, std::allocator<BEAD> >::~vector() [101]
-----------------------------------------------
                0.04   65.83     501/501         run_simulation(int, char**) [1]
[2]     98.5    0.04   65.83     501         forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [2]
               64.96    0.00     501/502         update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double) [3]
                0.52    0.15 1859712/1859712     EDGE::update_bending_forces(double) [4]
                0.05    0.14 1378752/1378752     BEAD::update_stretching_force(double, double) [8]
-----------------------------------------------
                0.13    0.00       1/502         run_simulation(int, char**) [1]
               64.96    0.00     501/502         forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [2]
[3]     97.3   65.09    0.00     502         update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double) [3]
                0.00    0.00  331200/34046784     dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.52    0.15 1859712/1859712     forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [2]
[4]      1.0    0.52    0.15 1859712         EDGE::update_bending_forces(double) [4]
                0.10    0.00 14877696/14885120     FACE::across(EDGE*) [12]
                0.05    0.00 7438848/34046784     dist(BEAD*, BEAD*) [6]
                0.00    0.00 1859712/1863424     std::vector<BEAD*, std::allocator<BEAD*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, unsigned long, BEAD* const&) [24]
-----------------------------------------------
                0.45    0.00       1/1           run_simulation(int, char**) [1]
[5]      0.7    0.45    0.00       1         generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
                0.00    0.00   36864/36864       std::vector<BEAD*, std::allocator<BEAD*> >::push_back(BEAD* const&) [25]
                0.00    0.00   26688/26688       std::vector<EDGE*, std::allocator<EDGE*> >::push_back(EDGE* const&) [29]
                0.00    0.00   16320/16320       std::vector<FACE*, std::allocator<FACE*> >::push_back(FACE* const&) [30]
                0.00    0.00   16320/27008       std::vector<FACE*, std::allocator<FACE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FACE**, std::vector<FACE*, std::allocator<FACE*> > >, FACE* const&) [28]
                0.00    0.00   16320/27904       std::vector<EDGE*, std::allocator<EDGE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<EDGE**, std::vector<EDGE*, std::allocator<EDGE*> > >, EDGE* const&) [27]
                0.00    0.00    2752/2752        std::vector<SUBUNIT*, std::allocator<SUBUNIT*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<SUBUNIT**, std::vector<SUBUNIT*, std::allocator<SUBUNIT*> > >, SUBUNIT* const&) [35]
                0.00    0.00    2739/2752        BEAD::BEAD(BEAD const&) [34]
                0.00    0.00      13/13          std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&) [43]
                0.00    0.00       1/1           SUBUNIT::~SUBUNIT() [91]
                0.00    0.00       1/1           EDGE::~EDGE() [77]
                0.00    0.00       1/1           std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&) [107]
                0.00    0.00       1/1           FACE::~FACE() [78]
                0.00    0.00       1/1           std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&) [104]
                0.00    0.00       1/1           std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&) [102]
-----------------------------------------------
                0.00    0.00  331200/34046784     update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double) [3]
                0.03    0.00 4456896/34046784     EDGE::update_length() [11]
                0.04    0.00 5450880/34046784     FACE::update_area_normal() [10]
                0.05    0.00 7438848/34046784     EDGE::update_bending_forces(double) [4]
                0.05    0.00 7455168/34046784     update_LJ_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double) [9]
                0.06    0.00 8913792/34046784     BEAD::update_stretching_force(double, double) [8]
[6]      0.4    0.24    0.00 34046784         dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.00    0.21     501/501         run_simulation(int, char**) [1]
[7]      0.3    0.00    0.21     501         dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&) [7]
                0.07    0.04 2725440/2725440     FACE::update_area_normal() [10]
                0.07    0.03 4456896/4456896     EDGE::update_length() [11]
-----------------------------------------------
                0.05    0.14 1378752/1378752     forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [2]
[8]      0.3    0.05    0.14 1378752         BEAD::update_stretching_force(double, double) [8]
                0.08    0.00 8913792/8913792     EDGE::opposite(BEAD*) [13]
                0.06    0.00 8913792/34046784     dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.10    0.05       1/1           run_simulation(int, char**) [1]
[9]      0.2    0.10    0.05       1         update_LJ_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double) [9]
                0.05    0.00 7455168/34046784     dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.07    0.04 2725440/2725440     dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&) [7]
[10]     0.2    0.07    0.04 2725440         FACE::update_area_normal() [10]
                0.04    0.00 5450880/34046784     dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.07    0.03 4456896/4456896     dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&) [7]
[11]     0.2    0.07    0.03 4456896         EDGE::update_length() [11]
                0.03    0.00 4456896/34046784     dist(BEAD*, BEAD*) [6]
-----------------------------------------------
                0.00    0.00    7424/14885120     EDGE::update_bending_energy(double) [16]
                0.10    0.00 14877696/14885120     EDGE::update_bending_forces(double) [4]
[12]     0.1    0.10    0.00 14885120         FACE::across(EDGE*) [12]
-----------------------------------------------
                0.08    0.00 8913792/8913792     BEAD::update_stretching_force(double, double) [8]
[13]     0.1    0.08    0.00 8913792         EDGE::opposite(BEAD*) [13]
-----------------------------------------------
                0.02    0.00 1376000/1376000     run_simulation(int, char**) [1]
[14]     0.0    0.02    0.00 1376000         BEAD::update_position(double) [14]
-----------------------------------------------
                0.01    0.00     501/501         run_simulation(int, char**) [1]
[15]     0.0    0.01    0.00     501         particle_kinetic_energy(std::vector<BEAD, std::allocator<BEAD> >&) [15]
-----------------------------------------------
                0.00    0.00    3712/3712        run_simulation(int, char**) [1]
[16]     0.0    0.00    0.00    3712         EDGE::update_bending_energy(double) [16]
                0.00    0.00    7424/14885120     FACE::across(EDGE*) [12]
                0.00    0.00    3712/1863424     std::vector<BEAD*, std::allocator<BEAD*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, unsigned long, BEAD* const&) [24]
-----------------------------------------------
                0.00    0.00    3712/1863424     EDGE::update_bending_energy(double) [16]
                0.00    0.00 1859712/1863424     EDGE::update_bending_forces(double) [4]
[24]     0.0    0.00    0.00 1863424         std::vector<BEAD*, std::allocator<BEAD*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, unsigned long, BEAD* const&) [24]
-----------------------------------------------
                0.00    0.00   36864/36864       generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[25]     0.0    0.00    0.00   36864         std::vector<BEAD*, std::allocator<BEAD*> >::push_back(BEAD* const&) [25]
                0.00    0.00   34560/34560       std::vector<BEAD*, std::allocator<BEAD*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, BEAD* const&) [26]
-----------------------------------------------
                0.00    0.00   34560/34560       std::vector<BEAD*, std::allocator<BEAD*> >::push_back(BEAD* const&) [25]
[26]     0.0    0.00    0.00   34560         std::vector<BEAD*, std::allocator<BEAD*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, BEAD* const&) [26]
-----------------------------------------------
                0.00    0.00   11584/27904       std::vector<EDGE*, std::allocator<EDGE*> >::push_back(EDGE* const&) [29]
                0.00    0.00   16320/27904       generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[27]     0.0    0.00    0.00   27904         std::vector<EDGE*, std::allocator<EDGE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<EDGE**, std::vector<EDGE*, std::allocator<EDGE*> > >, EDGE* const&) [27]
-----------------------------------------------
                0.00    0.00   10688/27008       std::vector<FACE*, std::allocator<FACE*> >::push_back(FACE* const&) [30]
                0.00    0.00   16320/27008       generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[28]     0.0    0.00    0.00   27008         std::vector<FACE*, std::allocator<FACE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FACE**, std::vector<FACE*, std::allocator<FACE*> > >, FACE* const&) [28]
-----------------------------------------------
                0.00    0.00   26688/26688       generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[29]     0.0    0.00    0.00   26688         std::vector<EDGE*, std::allocator<EDGE*> >::push_back(EDGE* const&) [29]
                0.00    0.00   11584/27904       std::vector<EDGE*, std::allocator<EDGE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<EDGE**, std::vector<EDGE*, std::allocator<EDGE*> > >, EDGE* const&) [27]
-----------------------------------------------
                0.00    0.00   16320/16320       generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[30]     0.0    0.00    0.00   16320         std::vector<FACE*, std::allocator<FACE*> >::push_back(FACE* const&) [30]
                0.00    0.00   10688/27008       std::vector<FACE*, std::allocator<FACE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FACE**, std::vector<FACE*, std::allocator<FACE*> > >, FACE* const&) [28]
-----------------------------------------------
                0.00    0.00    5000/5000        run_simulation(int, char**) [1]
[31]     0.0    0.00    0.00    5000         update_chain_xi(unsigned int, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >&, double, long double) [31]
-----------------------------------------------
                0.00    0.00    4095/4095        std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&) [43]
[32]     0.0    0.00    0.00    4095         BEAD::~BEAD() [32]
-----------------------------------------------
                0.00    0.00    2752/2752        run_simulation(int, char**) [1]
[33]     0.0    0.00    0.00    2752         BEAD::update_stretching_energy(double, double) [33]
-----------------------------------------------
                0.00    0.00      13/2752        std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&) [43]
                0.00    0.00    2739/2752        generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[34]     0.0    0.00    0.00    2752         BEAD::BEAD(BEAD const&) [34]
-----------------------------------------------
                0.00    0.00    2752/2752        generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[35]     0.0    0.00    0.00    2752         std::vector<SUBUNIT*, std::allocator<SUBUNIT*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<SUBUNIT**, std::vector<SUBUNIT*, std::allocator<SUBUNIT*> > >, SUBUNIT* const&) [35]
-----------------------------------------------
                0.00    0.00     504/504         run_simulation(int, char**) [1]
[36]     0.0    0.00    0.00     504         std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector() [36]
-----------------------------------------------
                0.00    0.00     502/502         run_simulation(int, char**) [1]
[37]     0.0    0.00    0.00     502         std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) [37]
-----------------------------------------------
                0.00    0.00     500/500         run_simulation(int, char**) [1]
[38]     0.0    0.00    0.00     500         ProgressBar(double) [38]
-----------------------------------------------
                0.00    0.00     138/138         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [51]
[39]     0.0    0.00    0.00     138         std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*) [39]
-----------------------------------------------
                0.00    0.00       4/48          boost::program_options::typed_value<double, char>::apply_default(boost::any&) const [280]
                0.00    0.00       8/48          void boost::program_options::validate<double, char>(boost::any&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, double*, long) [155]
                0.00    0.00      12/48          boost::program_options::typed_value<double, char>::~typed_value() [45]
                0.00    0.00      12/48          boost::program_options::typed_value<double, char>::default_value(double const&) [44]
                0.00    0.00      12/48          std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
[40]     0.0    0.00    0.00      48         boost::any::holder<double>::~holder() [40]
-----------------------------------------------
                0.00    0.00       8/28          boost::program_options::typed_value<double, char>::apply_default(boost::any&) const [280]
                0.00    0.00       8/28          void boost::program_options::validate<double, char>(boost::any&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, double*, long) [155]
                0.00    0.00      12/28          boost::program_options::typed_value<double, char>::default_value(double const&) [44]
[41]     0.0    0.00    0.00      28         boost::any::holder<double>::clone() const [41]
-----------------------------------------------
                0.00    0.00      26/26          std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&) [43]
[42]     0.0    0.00    0.00      26         BEAD* std::__uninitialized_copy<false>::__uninit_copy<BEAD*, BEAD*>(BEAD*, BEAD*, BEAD*) [42]
-----------------------------------------------
                0.00    0.00      13/13          generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[43]     0.0    0.00    0.00      13         std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&) [43]
                0.00    0.00    4095/4095        BEAD::~BEAD() [32]
                0.00    0.00      26/26          BEAD* std::__uninitialized_copy<false>::__uninit_copy<BEAD*, BEAD*>(BEAD*, BEAD*, BEAD*) [42]
                0.00    0.00      13/2752        BEAD::BEAD(BEAD const&) [34]
-----------------------------------------------
                0.00    0.00      12/12          run_simulation(int, char**) [1]
[44]     0.0    0.00    0.00      12         boost::program_options::typed_value<double, char>::default_value(double const&) [44]
                0.00    0.00      12/28          boost::any::holder<double>::clone() const [41]
                0.00    0.00      12/48          boost::any::holder<double>::~holder() [40]
                0.00    0.00      12/12          boost::detail::lexical_converter_impl<std::string, double>::try_convert(double const&, std::string&) [47]
-----------------------------------------------
                0.00    0.00      12/12          boost::program_options::typed_value<double, char>::~typed_value() [132]
[45]     0.0    0.00    0.00      12         boost::program_options::typed_value<double, char>::~typed_value() [45]
                0.00    0.00      12/48          boost::any::holder<double>::~holder() [40]
-----------------------------------------------
                0.00    0.00      12/12          run_simulation(int, char**) [1]
[46]     0.0    0.00    0.00      12         boost::program_options::typed_value<double, char>* boost::program_options::value<double>(double*) [46]
-----------------------------------------------
                0.00    0.00      12/12          boost::program_options::typed_value<double, char>::default_value(double const&) [44]
[47]     0.0    0.00    0.00      12         boost::detail::lexical_converter_impl<std::string, double>::try_convert(double const&, std::string&) [47]
-----------------------------------------------
                0.00    0.00      12/12          boost::program_options::typed_value<double, char>::notify(boost::any const&) const [282]
[48]     0.0    0.00    0.00      12         boost::any::holder<double>::type() const [48]
-----------------------------------------------
                0.00    0.00       8/8           void boost::program_options::validate<double, char>(boost::any&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, double*, long) [155]
[49]     0.0    0.00    0.00       8         std::basic_string<char, std::char_traits<char>, std::allocator<char> > const& boost::program_options::validators::get_single_string<char>(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool) [49]
-----------------------------------------------
                0.00    0.00       8/8           void boost::program_options::validate<double, char>(boost::any&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, double*, long) [155]
[50]     0.0    0.00    0.00       8         bool boost::detail::parse_inf_nan<char, double>(char const*, char const*, double&) [50]
-----------------------------------------------
                0.00    0.00       6/6           boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*) [88]
[51]     0.0    0.00    0.00       6         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [51]
                0.00    0.00     138/138         std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*) [39]
-----------------------------------------------
                0.00    0.00       5/5           run_simulation(int, char**) [1]
[52]     0.0    0.00    0.00       5         std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::push_back(THERMOSTAT const&) [52]
                0.00    0.00       4/4           std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::_M_insert_aux(__gnu_cxx::__normal_iterator<THERMOSTAT*, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> > >, THERMOSTAT const&) [55]
-----------------------------------------------
                0.00    0.00       1/4           boost::program_options::typed_value<bool, char>::~typed_value() [82]
                0.00    0.00       1/4           boost::program_options::typed_value<bool, char>::apply_default(boost::any&) const [262]
                0.00    0.00       1/4           boost::program_options::typed_value<bool, char>::default_value(bool const&) [81]
                0.00    0.00       1/4           std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
[53]     0.0    0.00    0.00       4         boost::any::holder<bool>::~holder() [53]
-----------------------------------------------
                0.00    0.00       1/4           boost::program_options::typed_value<char, char>::~typed_value() [84]
                0.00    0.00       1/4           boost::program_options::typed_value<char, char>::apply_default(boost::any&) const [271]
                0.00    0.00       1/4           boost::program_options::typed_value<char, char>::default_value(char const&) [83]
                0.00    0.00       1/4           std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
[54]     0.0    0.00    0.00       4         boost::any::holder<char>::~holder() [54]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::push_back(THERMOSTAT const&) [52]
[55]     0.0    0.00    0.00       4         std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::_M_insert_aux(__gnu_cxx::__normal_iterator<THERMOSTAT*, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> > >, THERMOSTAT const&) [55]
-----------------------------------------------
                0.00    0.00       1/3           boost::program_options::typed_value<std::string, char>::~typed_value() [80]
                0.00    0.00       1/3           boost::program_options::typed_value<std::string, char>::default_value(std::string const&) [79]
                0.00    0.00       1/3           std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
[56]     0.0    0.00    0.00       3         boost::any::holder<std::string>::~holder() [56]
-----------------------------------------------
                0.00    0.00       1/3           boost::program_options::typed_value<bool, char>::default_value(bool const&) [81]
                0.00    0.00       2/3           boost::program_options::typed_value<bool, char>::apply_default(boost::any&) const [262]
[57]     0.0    0.00    0.00       3         boost::any::holder<bool>::clone() const [57]
-----------------------------------------------
                0.00    0.00       1/3           boost::program_options::typed_value<char, char>::default_value(char const&) [83]
                0.00    0.00       2/3           boost::program_options::typed_value<char, char>::apply_default(boost::any&) const [271]
[58]     0.0    0.00    0.00       3         boost::any::holder<char>::clone() const [58]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::operator=(std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > const&) [109]
                0.00    0.00       1/2           boost::program_options::basic_command_line_parser<char>::run() [87]
[59]     0.0    0.00    0.00       2         boost::program_options::basic_option<char>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*>(__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, __gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*) [59]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&) [102]
[60]     0.0    0.00    0.00       2         EDGE* std::__uninitialized_copy<false>::__uninit_copy<EDGE*, EDGE*>(EDGE*, EDGE*, EDGE*) [60]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&) [104]
[61]     0.0    0.00    0.00       2         FACE* std::__uninitialized_copy<false>::__uninit_copy<FACE*, FACE*>(FACE*, FACE*, FACE*) [61]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&) [107]
[62]     0.0    0.00    0.00       2         SUBUNIT* std::__uninitialized_copy<false>::__uninit_copy<SUBUNIT*, SUBUNIT*>(SUBUNIT*, SUBUNIT*, SUBUNIT*) [62]
-----------------------------------------------
                0.00    0.00       1/2           run_simulation(int, char**) [1]
                0.00    0.00       1/2           boost::program_options::basic_command_line_parser<char>::run() [87]
[63]     0.0    0.00    0.00       2         std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::~vector() [63]
-----------------------------------------------
                0.00    0.00       2/2           boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*) [88]
[64]     0.0    0.00    0.00       2         std::vector<std::string, std::allocator<std::string> >::~vector() [64]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[65]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11ProgressBard [65]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[66]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z16forceCalculationRSt6vectorI7SUBUNITSaIS0_EEdddRS_I4BEADSaIS4_EERS_I4PAIRSaIS8_EEddddS_IS_IiSaIiEESaISD_EEddd [66]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[67]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z21initialize_outputfileRSt14basic_ofstreamIcSt11char_traitsIcEES3_ [67]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[68]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z23particle_kinetic_energyRSt6vectorI4BEADSaIS0_EE [68]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[69]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4BEAD24update_stretching_energyEdd [69]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[70]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4EDGE8oppositeEP4BEAD [70]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[71]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4FACE13update_normalEv [71]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[72]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7SUBUNIT10update_comEv [72]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[73]     0.0    0.00    0.00       1         _GLOBAL__sub_I_lowerBound [73]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [393]
[74]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [74]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[75]     0.0    0.00    0.00       1         initialize_outputfile(std::basic_ofstream<char, std::char_traits<char> >&, std::basic_ofstream<char, std::char_traits<char> >&) [75]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[76]     0.0    0.00    0.00       1         initialize_bead_velocities(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<BEAD, std::allocator<BEAD> >&, double) [76]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[77]     0.0    0.00    0.00       1         EDGE::~EDGE() [77]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[78]     0.0    0.00    0.00       1         FACE::~FACE() [78]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[79]     0.0    0.00    0.00       1         boost::program_options::typed_value<std::string, char>::default_value(std::string const&) [79]
                0.00    0.00       1/1           boost::any::holder<std::string>::clone() const [93]
                0.00    0.00       1/3           boost::any::holder<std::string>::~holder() [56]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<std::string, char>::~typed_value() [129]
[80]     0.0    0.00    0.00       1         boost::program_options::typed_value<std::string, char>::~typed_value() [80]
                0.00    0.00       1/3           boost::any::holder<std::string>::~holder() [56]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[81]     0.0    0.00    0.00       1         boost::program_options::typed_value<bool, char>::default_value(bool const&) [81]
                0.00    0.00       1/3           boost::any::holder<bool>::clone() const [57]
                0.00    0.00       1/4           boost::any::holder<bool>::~holder() [53]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<bool, char>::~typed_value() [130]
[82]     0.0    0.00    0.00       1         boost::program_options::typed_value<bool, char>::~typed_value() [82]
                0.00    0.00       1/4           boost::any::holder<bool>::~holder() [53]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[83]     0.0    0.00    0.00       1         boost::program_options::typed_value<char, char>::default_value(char const&) [83]
                0.00    0.00       1/3           boost::any::holder<char>::clone() const [58]
                0.00    0.00       1/4           boost::any::holder<char>::~holder() [54]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<char, char>::~typed_value() [131]
[84]     0.0    0.00    0.00       1         boost::program_options::typed_value<char, char>::~typed_value() [84]
                0.00    0.00       1/4           boost::any::holder<char>::~holder() [54]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[85]     0.0    0.00    0.00       1         boost::program_options::variables_map::~variables_map() [85]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*) [113]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [111]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[86]     0.0    0.00    0.00       1         boost::program_options::options_description::~options_description() [86]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[87]     0.0    0.00    0.00       1         boost::program_options::basic_command_line_parser<char>::run() [87]
                0.00    0.00       1/1           std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::operator=(std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > const&) [109]
                0.00    0.00       1/2           std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::~vector() [63]
                0.00    0.00       1/2           boost::program_options::basic_option<char>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*>(__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, __gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*) [59]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[88]     0.0    0.00    0.00       1         boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*) [88]
                0.00    0.00       6/6           std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [51]
                0.00    0.00       2/2           std::vector<std::string, std::allocator<std::string> >::~vector() [64]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[89]     0.0    0.00    0.00       1         boost::function1<std::pair<std::string, std::string>, std::string const&>::clear() [89]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[90]     0.0    0.00    0.00       1         SUBUNIT::update_com() [90]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[91]     0.0    0.00    0.00       1         SUBUNIT::~SUBUNIT() [91]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<std::string, char>::notify(boost::any const&) const [255]
[92]     0.0    0.00    0.00       1         boost::any::holder<std::string>::type() const [92]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<std::string, char>::default_value(std::string const&) [79]
[93]     0.0    0.00    0.00       1         boost::any::holder<std::string>::clone() const [93]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<bool, char>::notify(boost::any const&) const [264]
[94]     0.0    0.00    0.00       1         boost::any::holder<bool>::type() const [94]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::typed_value<char, char>::notify(boost::any const&) const [273]
[95]     0.0    0.00    0.00       1         boost::any::holder<char>::type() const [95]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[96]     0.0    0.00    0.00       1         std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::find(std::string const&) const [96]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator=(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) [110]
[97]     0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, __gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*) [97]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&) [102]
[98]     0.0    0.00    0.00       1         void std::__uninitialized_fill_n<false>::__uninit_fill_n<EDGE*, unsigned long, EDGE>(EDGE*, unsigned long, EDGE const&) [98]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&) [104]
[99]     0.0    0.00    0.00       1         void std::__uninitialized_fill_n<false>::__uninit_fill_n<FACE*, unsigned long, FACE>(FACE*, unsigned long, FACE const&) [99]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&) [107]
[100]    0.0    0.00    0.00       1         void std::__uninitialized_fill_n<false>::__uninit_fill_n<SUBUNIT*, unsigned long, SUBUNIT>(SUBUNIT*, unsigned long, SUBUNIT const&) [100]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[101]    0.0    0.00    0.00       1         std::vector<BEAD, std::allocator<BEAD> >::~vector() [101]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[102]    0.0    0.00    0.00       1         std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&) [102]
                0.00    0.00       2/2           EDGE* std::__uninitialized_copy<false>::__uninit_copy<EDGE*, EDGE*>(EDGE*, EDGE*, EDGE*) [60]
                0.00    0.00       1/1           void std::__uninitialized_fill_n<false>::__uninit_fill_n<EDGE*, unsigned long, EDGE>(EDGE*, unsigned long, EDGE const&) [98]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[103]    0.0    0.00    0.00       1         std::vector<EDGE, std::allocator<EDGE> >::~vector() [103]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[104]    0.0    0.00    0.00       1         std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&) [104]
                0.00    0.00       2/2           FACE* std::__uninitialized_copy<false>::__uninit_copy<FACE*, FACE*>(FACE*, FACE*, FACE*) [61]
                0.00    0.00       1/1           void std::__uninitialized_fill_n<false>::__uninit_fill_n<FACE*, unsigned long, FACE>(FACE*, unsigned long, FACE const&) [99]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[105]    0.0    0.00    0.00       1         std::vector<FACE, std::allocator<FACE> >::~vector() [105]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[106]    0.0    0.00    0.00       1         std::vector<PAIR, std::allocator<PAIR> >::~vector() [106]
-----------------------------------------------
                0.00    0.00       1/1           generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [5]
[107]    0.0    0.00    0.00       1         std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&) [107]
                0.00    0.00       2/2           SUBUNIT* std::__uninitialized_copy<false>::__uninit_copy<SUBUNIT*, SUBUNIT*>(SUBUNIT*, SUBUNIT*, SUBUNIT*) [62]
                0.00    0.00       1/1           void std::__uninitialized_fill_n<false>::__uninit_fill_n<SUBUNIT*, unsigned long, SUBUNIT>(SUBUNIT*, unsigned long, SUBUNIT const&) [100]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[108]    0.0    0.00    0.00       1         std::vector<SUBUNIT, std::allocator<SUBUNIT> >::~vector() [108]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::basic_command_line_parser<char>::run() [87]
[109]    0.0    0.00    0.00       1         std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::operator=(std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > const&) [109]
                0.00    0.00       1/2           boost::program_options::basic_option<char>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*>(__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, __gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*) [59]
-----------------------------------------------
                0.00    0.00       1/1           run_simulation(int, char**) [1]
[110]    0.0    0.00    0.00       1         std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator=(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&) [110]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, __gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*) [97]
-----------------------------------------------
                                  18             std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [111]
                0.00    0.00       1/1           boost::program_options::variables_map::~variables_map() [85]
[111]    0.0    0.00    0.00       1+18      std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [111]
                                  18             std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [111]
-----------------------------------------------
                                  15             std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
                0.00    0.00       1/1           boost::program_options::variables_map::~variables_map() [85]
[112]    0.0    0.00    0.00       1+15      std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
                0.00    0.00      12/48          boost::any::holder<double>::~holder() [40]
                0.00    0.00       1/4           boost::any::holder<char>::~holder() [54]
                0.00    0.00       1/3           boost::any::holder<std::string>::~holder() [56]
                0.00    0.00       1/4           boost::any::holder<bool>::~holder() [53]
                                  15             std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*) [112]
-----------------------------------------------
                0.00    0.00       1/1           boost::program_options::variables_map::~variables_map() [85]
[113]    0.0    0.00    0.00       1         std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*) [113]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [65] _GLOBAL__sub_I__Z11ProgressBard (functions.cpp) [79] boost::program_options::typed_value<std::string, char>::default_value(std::string const&) [62] SUBUNIT* std::__uninitialized_copy<false>::__uninit_copy<SUBUNIT*, SUBUNIT*>(SUBUNIT*, SUBUNIT*, SUBUNIT*)
  [66] _GLOBAL__sub_I__Z16forceCalculationRSt6vectorI7SUBUNITSaIS0_EEdddRS_I4BEADSaIS4_EERS_I4PAIRSaIS8_EEddddS_IS_IiSaIiEESaISD_EEddd (forces.cpp) [80] boost::program_options::typed_value<std::string, char>::~typed_value() [39] std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
  [67] _GLOBAL__sub_I__Z21initialize_outputfileRSt14basic_ofstreamIcSt11char_traitsIcEES3_ (initialize.cpp) [81] boost::program_options::typed_value<bool, char>::default_value(bool const&) [98] void std::__uninitialized_fill_n<false>::__uninit_fill_n<EDGE*, unsigned long, EDGE>(EDGE*, unsigned long, EDGE const&)
  [68] _GLOBAL__sub_I__Z23particle_kinetic_energyRSt6vectorI4BEADSaIS0_EE (energies.cpp) [82] boost::program_options::typed_value<bool, char>::~typed_value() [99] void std::__uninitialized_fill_n<false>::__uninit_fill_n<FACE*, unsigned long, FACE>(FACE*, unsigned long, FACE const&)
  [69] _GLOBAL__sub_I__ZN4BEAD24update_stretching_energyEdd (bead.cpp) [83] boost::program_options::typed_value<char, char>::default_value(char const&) [100] void std::__uninitialized_fill_n<false>::__uninit_fill_n<SUBUNIT*, unsigned long, SUBUNIT>(SUBUNIT*, unsigned long, SUBUNIT const&)
  [70] _GLOBAL__sub_I__ZN4EDGE8oppositeEP4BEAD (edge.cpp) [84] boost::program_options::typed_value<char, char>::~typed_value() [55] std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::_M_insert_aux(__gnu_cxx::__normal_iterator<THERMOSTAT*, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> > >, THERMOSTAT const&)
  [71] _GLOBAL__sub_I__ZN4FACE13update_normalEv (face.cpp) [44] boost::program_options::typed_value<double, char>::default_value(double const&) [52] std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >::push_back(THERMOSTAT const&)
  [72] _GLOBAL__sub_I__ZN7SUBUNIT10update_comEv (subunit.cpp) [45] boost::program_options::typed_value<double, char>::~typed_value() [43] std::vector<BEAD, std::allocator<BEAD> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD*, std::vector<BEAD, std::allocator<BEAD> > >, BEAD const&)
  [73] _GLOBAL__sub_I_lowerBound (md.cpp) [85] boost::program_options::variables_map::~variables_map() [101] std::vector<BEAD, std::allocator<BEAD> >::~vector()
  [74] _GLOBAL__sub_I_main (main.cpp) [86] boost::program_options::options_description::~options_description() [102] std::vector<EDGE, std::allocator<EDGE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<EDGE*, std::vector<EDGE, std::allocator<EDGE> > >, unsigned long, EDGE const&)
  [38] ProgressBar(double)    [87] boost::program_options::basic_command_line_parser<char>::run() [103] std::vector<EDGE, std::allocator<EDGE> >::~vector()
   [1] run_simulation(int, char**) [88] boost::program_options::basic_command_line_parser<char>::basic_command_line_parser(int, char const* const*) [104] std::vector<FACE, std::allocator<FACE> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FACE*, std::vector<FACE, std::allocator<FACE> > >, unsigned long, FACE const&)
  [31] update_chain_xi(unsigned int, std::vector<THERMOSTAT, std::allocator<THERMOSTAT> >&, double, long double) [46] boost::program_options::typed_value<double, char>* boost::program_options::value<double>(double*) [105] std::vector<FACE, std::allocator<FACE> >::~vector()
   [2] forceCalculation(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, double, double, double, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<PAIR, std::allocator<PAIR> >&, double, double, double, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double, double, double) [56] boost::any::holder<std::string>::~holder() [106] std::vector<PAIR, std::allocator<PAIR> >::~vector()
   [5] generate_lattice(double, unsigned int, std::string, double&, double&, double&, std::vector<BEAD, std::allocator<BEAD> >&, std::vector<EDGE, std::allocator<EDGE> >&, std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<FACE, std::allocator<FACE> >&) [53] boost::any::holder<bool>::~holder() [107] std::vector<SUBUNIT, std::allocator<SUBUNIT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<SUBUNIT*, std::vector<SUBUNIT, std::allocator<SUBUNIT> > >, unsigned long, SUBUNIT const&)
  [75] initialize_outputfile(std::basic_ofstream<char, std::char_traits<char> >&, std::basic_ofstream<char, std::char_traits<char> >&) [54] boost::any::holder<char>::~holder() [108] std::vector<SUBUNIT, std::allocator<SUBUNIT> >::~vector()
  [15] particle_kinetic_energy(std::vector<BEAD, std::allocator<BEAD> >&) [40] boost::any::holder<double>::~holder() [63] std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::~vector()
  [76] initialize_bead_velocities(std::vector<SUBUNIT, std::allocator<SUBUNIT> >&, std::vector<BEAD, std::allocator<BEAD> >&, double) [50] bool boost::detail::parse_inf_nan<char, double>(char const*, char const*, double&) [109] std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > >::operator=(std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > const&)
   [3] update_ES_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, double, double, double, double) [47] boost::detail::lexical_converter_impl<std::string, double>::try_convert(double const&, std::string&) [26] std::vector<BEAD*, std::allocator<BEAD*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, BEAD* const&)
   [9] update_LJ_energies_simplified(std::vector<BEAD, std::allocator<BEAD> >&, double, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, double) [89] boost::function1<std::pair<std::string, std::string>, std::string const&>::clear() [24] std::vector<BEAD*, std::allocator<BEAD*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<BEAD**, std::vector<BEAD*, std::allocator<BEAD*> > >, unsigned long, BEAD* const&)
   [6] dist(BEAD*, BEAD*)     [90] SUBUNIT::update_com()  [25] std::vector<BEAD*, std::allocator<BEAD*> >::push_back(BEAD* const&)
   [7] dress_up(std::vector<EDGE, std::allocator<EDGE> >&, std::vector<FACE, std::allocator<FACE> >&) [91] SUBUNIT::~SUBUNIT() [27] std::vector<EDGE*, std::allocator<EDGE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<EDGE**, std::vector<EDGE*, std::allocator<EDGE*> > >, EDGE* const&)
  [14] BEAD::update_position(double) [92] boost::any::holder<std::string>::type() const [29] std::vector<EDGE*, std::allocator<EDGE*> >::push_back(EDGE* const&)
   [8] BEAD::update_stretching_force(double, double) [93] boost::any::holder<std::string>::clone() const [28] std::vector<FACE*, std::allocator<FACE*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FACE**, std::vector<FACE*, std::allocator<FACE*> > >, FACE* const&)
  [33] BEAD::update_stretching_energy(double, double) [94] boost::any::holder<bool>::type() const [30] std::vector<FACE*, std::allocator<FACE*> >::push_back(FACE* const&)
  [34] BEAD::BEAD(BEAD const&) [57] boost::any::holder<bool>::clone() const [35] std::vector<SUBUNIT*, std::allocator<SUBUNIT*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<SUBUNIT**, std::vector<SUBUNIT*, std::allocator<SUBUNIT*> > >, SUBUNIT* const&)
  [32] BEAD::~BEAD()          [95] boost::any::holder<char>::type() const [37] std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)
  [11] EDGE::update_length()  [58] boost::any::holder<char>::clone() const [36] std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector()
  [16] EDGE::update_bending_energy(double) [48] boost::any::holder<double>::type() const [110] std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator=(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > const&)
   [4] EDGE::update_bending_forces(double) [41] boost::any::holder<double>::clone() const [51] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  [13] EDGE::opposite(BEAD*)  [96] std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::find(std::string const&) const [64] std::vector<std::string, std::allocator<std::string> >::~vector()
  [77] EDGE::~EDGE()          [59] boost::program_options::basic_option<char>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*>(__gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, __gnu_cxx::__normal_iterator<boost::program_options::basic_option<char> const*, std::vector<boost::program_options::basic_option<char>, std::allocator<boost::program_options::basic_option<char> > > >, boost::program_options::basic_option<char>*) [111] std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
  [10] FACE::update_area_normal() [97] std::vector<int, std::allocator<int> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, __gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*) [112] std::_Rb_tree<std::string, std::pair<std::string const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::string const, boost::program_options::variable_value> >, std::less<std::string>, std::allocator<std::pair<std::string const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, boost::program_options::variable_value> >*)
  [12] FACE::across(EDGE*)    [42] BEAD* std::__uninitialized_copy<false>::__uninit_copy<BEAD*, BEAD*>(BEAD*, BEAD*, BEAD*) [113] std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*)
  [78] FACE::~FACE()          [60] EDGE* std::__uninitialized_copy<false>::__uninit_copy<EDGE*, EDGE*>(EDGE*, EDGE*, EDGE*)
  [49] std::basic_string<char, std::char_traits<char>, std::allocator<char> > const& boost::program_options::validators::get_single_string<char>(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool) [61] FACE* std::__uninitialized_copy<false>::__uninit_copy<FACE*, FACE*>(FACE*, FACE*, FACE*)
